#!/usr/bin/env ruby

require 'puppet_generator'
require 'thor'
require 'pry'

class Default < Thor
  class_option :source , type: :string, default: 'input.txt', desc: 'enter the source which should be used to generate the puppet output' 
  class_option :destination , type: :string, default: 'dir:out', desc: 'where should the information be stored. Valid input is "file|dir:<dest>" or "stdout"'
  class_option :module , type: :string, default: 'mymodule', desc: 'the module prefix in puppet class name'
  class_option :class , type: :string, default: 'myclass', desc: 'the class suffix in puppet class name'

  no_tasks {
    def task
      t = PuppetGenerator::Task.new
      t.meta[:source] = options[:source] 
      t.meta[:destination] = options[:destination]
      t.meta[:module] = options[:module]
      t.meta[:class] = options[:class]

      t
    end
  }

  desc 'package', 'generate package definitions'
  def package
    task.is_package_task

    api = PuppetGenerator::Api.new  
    api.generate_package_definition(task)
  end

  desc 'file', 'generate file definitions'
  def file
    task.is_file_task

    api = PuppetGenerator::Api.new  
    api.generate_file_definition(task)
  end
end

Default.start
